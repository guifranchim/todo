name: Build and Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    environment: aws
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-2
      EKS_CLUSTER: todo-ua
      IMAGE_REPO_BACK: todolist-ua-back
      IMAGE_REPO_FRONT: todolist-ua-front
      TAG: ${{ github.sha }}

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            us-east-2

      - name: Get AWS Account ID
        id: aws-account
        run: echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build & Push Backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file:    ./backend/Dockerfile
          push:    true
          tags:    ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPO_BACK }}:${{ env.TAG }}

      - name: Build & Push Frontend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file:    ./Dockerfile
          push:    true
          tags:    ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPO_FRONT }}:${{ env.TAG }}

      - name: Update kubeconfig for EKS
        uses: aws-actions/eks-update-kubeconfig@v1
        with:
          cluster-name: ${{ env.EKS_CLUSTER }}
          region:       ${{ env.AWS_REGION }}

      - name: Deploy to EKS (rolling image update)
        run: |
          # Update your deployments—assumes container names match repo names
          kubectl set image deployment/${{ env.IMAGE_REPO_BACK }} \
            ${IMAGE_REPO_BACK}=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPO_BACK }}:${{ env.TAG }} \
            --namespace default

          kubectl set image deployment/${{ env.IMAGE_REPO_FRONT }} \
            ${IMAGE_REPO_FRONT}=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPO_FRONT }}:${{ env.TAG }} \
            --namespace default

          # Wait for rollout to finish
          kubectl rollout status deployment/${{ env.IMAGE_REPO_BACK }}  --namespace default
          kubectl rollout status deployment/${{ env.IMAGE_REPO_FRONT }} --namespace default
